
Выбор текстового редактора при настройке Git

настройки для вс.code:
git config --global core.editor "code --wait"
// ----------------------------------- //

Настройка имени главной ветки в Git
git config --global init.defaultBranch 
	main 
 // -------------------------------- //

 Проверка настроек в Git
 git config --list 

 //--------------------------------//
 Пусть мы создали файл index.html. Изначально он будет не отслеживаемый:

 Сделаем его отслеживаемым:

git add index.html
// ------------------------------------ //

Теперь он попадает в список для подготовленных к коммиту, как новый файл:

Changes to be committed:
	new file: index.html
// ------------------------------------- //

	
Давайте заставим Git проиндексировать текущее состояние нашего файла index.html, в который мы внести изменения. Выполним для него команду add:

git add index.html
И так нужно делать каждый раз
// -------------------------------------- //

// ------------------------------------- //
Для того, чтобы вывести статус в короткой форме нужно воспользоваться следующей командой:

git status -s
// --------------------------------------- //

Иногда необходимо посмотреть, какие изменения были внесены в файлы после предыдущей индексации. Это делается с помощью команды diff:
git diff
// ----------------------------------- //

Чтобы наверняка удалить ненужный нам файл следует использовать команду
git rm -f test
// ---------------------------------- ----- //
git rm --cached index.html - прекращение слежения за файлом
// -------------------------------------- //
создание новой ветки
 git branch rest

 удаление ветки:
 git branch -D rest
 // --------------------------- //

 переключение на другую ветку:
 git checkout rest 
 или
git checkout -b rest

переименование ветки:
git branch --move старое имя новое имя
// ---------------------------- //

совмещение веток:
git merge ветка

Слитые ветки:
git branch --merged

не слитые ветки:
git branch --no-merged

// --------------------------- //
gitk - посмотреть коммиты
 git commit -m 'коментарий'- создание коммита

// ---------------------------------------- //
git log - просмотр истории коммитов

 вывод списка коммитов: 

 git log --pretty=format:"%h - %s "
git log --pretty=format:"%h - %s : %ad [ %an  ] "

Просмотр последнего коммита веток в Git:
git branch -v

Изменить сообщение коммита:

git commit --amend -m "Новое прекрасное сообщение"
 git reset HEAD index.html - возврат к предыдущему состоянию

 // ------------------------------ //
 nano (файл)-просмотр файла
 ctrl x - выход из него

 // ------------------------------------ //
восстановление удаленного файла:
git checkout myfile.txt

//--------------------------------- //

переименование файла:
git mv старый новый 
// ------------------------------ //

перемещение в другую папку:
git mv ./new.txt old/file.txt

// ------------------------------ //
отмена индексации файла:
git restore --staged index.html

// ---------------------------------- //

псевдонимы для команд:
git config --global alias.form log --pretty=format:"%h - %s "
Теперь для просмотра коммитов вам будет достаточно ввести в терминал:
git form

// -------------------------------------- //
